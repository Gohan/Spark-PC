// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessage.proto

#ifndef PROTOBUF_GameMessage_2eproto__INCLUDED
#define PROTOBUF_GameMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GameMessage {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameMessage_2eproto();
void protobuf_AssignDesc_GameMessage_2eproto();
void protobuf_ShutdownFile_GameMessage_2eproto();

class GameMessage;
class GameMessage_MessageHead;
class GameMessage_MessageBody;
class Resource;
class PlayerResource;
class PlayerGamGeneralActionNotify;
class PlayerEnterGameNotify;
class PlayerChooseGameBoardReq;
class PlayerChooseGameBoardNotify;
class PlayerHarvestAreaUpdateNotify;
class PlayerAuctionMessageReq;
class PlayerAuctionBroadcast;

enum GameMessage_ClientType {
  GameMessage_ClientType_PC = 1,
  GameMessage_ClientType_Web = 2,
  GameMessage_ClientType_Android = 3,
  GameMessage_ClientType_IOS = 4
};
bool GameMessage_ClientType_IsValid(int value);
const GameMessage_ClientType GameMessage_ClientType_ClientType_MIN = GameMessage_ClientType_PC;
const GameMessage_ClientType GameMessage_ClientType_ClientType_MAX = GameMessage_ClientType_IOS;
const int GameMessage_ClientType_ClientType_ARRAYSIZE = GameMessage_ClientType_ClientType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameMessage_ClientType_descriptor();
inline const ::std::string& GameMessage_ClientType_Name(GameMessage_ClientType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameMessage_ClientType_descriptor(), value);
}
inline bool GameMessage_ClientType_Parse(
    const ::std::string& name, GameMessage_ClientType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameMessage_ClientType>(
    GameMessage_ClientType_descriptor(), name, value);
}
enum Resource_Type {
  Resource_Type_Crops = 0,
  Resource_Type_Berries = 1,
  Resource_Type_Fish = 2,
  Resource_Type_Bears = 3,
  Resource_Type_Mammoths = 4
};
bool Resource_Type_IsValid(int value);
const Resource_Type Resource_Type_Type_MIN = Resource_Type_Crops;
const Resource_Type Resource_Type_Type_MAX = Resource_Type_Mammoths;
const int Resource_Type_Type_ARRAYSIZE = Resource_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Resource_Type_descriptor();
inline const ::std::string& Resource_Type_Name(Resource_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Resource_Type_descriptor(), value);
}
inline bool Resource_Type_Parse(
    const ::std::string& name, Resource_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Resource_Type>(
    Resource_Type_descriptor(), name, value);
}
enum PlayerGamGeneralActionNotify_Type {
  PlayerGamGeneralActionNotify_Type_ENTER_PREPARATION_STEP = 0
};
bool PlayerGamGeneralActionNotify_Type_IsValid(int value);
const PlayerGamGeneralActionNotify_Type PlayerGamGeneralActionNotify_Type_Type_MIN = PlayerGamGeneralActionNotify_Type_ENTER_PREPARATION_STEP;
const PlayerGamGeneralActionNotify_Type PlayerGamGeneralActionNotify_Type_Type_MAX = PlayerGamGeneralActionNotify_Type_ENTER_PREPARATION_STEP;
const int PlayerGamGeneralActionNotify_Type_Type_ARRAYSIZE = PlayerGamGeneralActionNotify_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerGamGeneralActionNotify_Type_descriptor();
inline const ::std::string& PlayerGamGeneralActionNotify_Type_Name(PlayerGamGeneralActionNotify_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerGamGeneralActionNotify_Type_descriptor(), value);
}
inline bool PlayerGamGeneralActionNotify_Type_Parse(
    const ::std::string& name, PlayerGamGeneralActionNotify_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerGamGeneralActionNotify_Type>(
    PlayerGamGeneralActionNotify_Type_descriptor(), name, value);
}
enum PlayerChooseGameBoardReq_Angle {
  PlayerChooseGameBoardReq_Angle_R0 = 0,
  PlayerChooseGameBoardReq_Angle_R60 = 1,
  PlayerChooseGameBoardReq_Angle_R120 = 2,
  PlayerChooseGameBoardReq_Angle_R180 = 3,
  PlayerChooseGameBoardReq_Angle_R240 = 4,
  PlayerChooseGameBoardReq_Angle_R300 = 5
};
bool PlayerChooseGameBoardReq_Angle_IsValid(int value);
const PlayerChooseGameBoardReq_Angle PlayerChooseGameBoardReq_Angle_Angle_MIN = PlayerChooseGameBoardReq_Angle_R0;
const PlayerChooseGameBoardReq_Angle PlayerChooseGameBoardReq_Angle_Angle_MAX = PlayerChooseGameBoardReq_Angle_R300;
const int PlayerChooseGameBoardReq_Angle_Angle_ARRAYSIZE = PlayerChooseGameBoardReq_Angle_Angle_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChooseGameBoardReq_Angle_descriptor();
inline const ::std::string& PlayerChooseGameBoardReq_Angle_Name(PlayerChooseGameBoardReq_Angle value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChooseGameBoardReq_Angle_descriptor(), value);
}
inline bool PlayerChooseGameBoardReq_Angle_Parse(
    const ::std::string& name, PlayerChooseGameBoardReq_Angle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChooseGameBoardReq_Angle>(
    PlayerChooseGameBoardReq_Angle_descriptor(), name, value);
}
// ===================================================================

class GameMessage_MessageHead : public ::google::protobuf::Message {
 public:
  GameMessage_MessageHead();
  virtual ~GameMessage_MessageHead();

  GameMessage_MessageHead(const GameMessage_MessageHead& from);

  inline GameMessage_MessageHead& operator=(const GameMessage_MessageHead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessage_MessageHead& default_instance();

  void Swap(GameMessage_MessageHead* other);

  // implements Message ----------------------------------------------

  GameMessage_MessageHead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMessage_MessageHead& from);
  void MergeFrom(const GameMessage_MessageHead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 seq = 1;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 1;
  inline ::google::protobuf::uint64 seq() const;
  inline void set_seq(::google::protobuf::uint64 value);

  // required .GameMessage.GameMessage.ClientType client_type = 2 [default = PC];
  inline bool has_client_type() const;
  inline void clear_client_type();
  static const int kClientTypeFieldNumber = 2;
  inline ::GameMessage::GameMessage_ClientType client_type() const;
  inline void set_client_type(::GameMessage::GameMessage_ClientType value);

  // required uint32 body_size = 3;
  inline bool has_body_size() const;
  inline void clear_body_size();
  static const int kBodySizeFieldNumber = 3;
  inline ::google::protobuf::uint32 body_size() const;
  inline void set_body_size(::google::protobuf::uint32 value);

  // required uint32 body_type = 4;
  inline bool has_body_type() const;
  inline void clear_body_type();
  static const int kBodyTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 body_type() const;
  inline void set_body_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.GameMessage.MessageHead)
 private:
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_client_type();
  inline void clear_has_client_type();
  inline void set_has_body_size();
  inline void clear_has_body_size();
  inline void set_has_body_type();
  inline void clear_has_body_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 seq_;
  int client_type_;
  ::google::protobuf::uint32 body_size_;
  ::google::protobuf::uint32 body_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static GameMessage_MessageHead* default_instance_;
};
// -------------------------------------------------------------------

class GameMessage_MessageBody : public ::google::protobuf::Message {
 public:
  GameMessage_MessageBody();
  virtual ~GameMessage_MessageBody();

  GameMessage_MessageBody(const GameMessage_MessageBody& from);

  inline GameMessage_MessageBody& operator=(const GameMessage_MessageBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessage_MessageBody& default_instance();

  void Swap(GameMessage_MessageBody* other);

  // implements Message ----------------------------------------------

  GameMessage_MessageBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMessage_MessageBody& from);
  void MergeFrom(const GameMessage_MessageBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(GameMessage_MessageBody)
  // @@protoc_insertion_point(class_scope:GameMessage.GameMessage.MessageBody)
 private:

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static GameMessage_MessageBody* default_instance_;
};
// -------------------------------------------------------------------

class GameMessage : public ::google::protobuf::Message {
 public:
  GameMessage();
  virtual ~GameMessage();

  GameMessage(const GameMessage& from);

  inline GameMessage& operator=(const GameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessage& default_instance();

  void Swap(GameMessage* other);

  // implements Message ----------------------------------------------

  GameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameMessage& from);
  void MergeFrom(const GameMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GameMessage_MessageHead MessageHead;
  typedef GameMessage_MessageBody MessageBody;

  typedef GameMessage_ClientType ClientType;
  static const ClientType PC = GameMessage_ClientType_PC;
  static const ClientType Web = GameMessage_ClientType_Web;
  static const ClientType Android = GameMessage_ClientType_Android;
  static const ClientType IOS = GameMessage_ClientType_IOS;
  static inline bool ClientType_IsValid(int value) {
    return GameMessage_ClientType_IsValid(value);
  }
  static const ClientType ClientType_MIN =
    GameMessage_ClientType_ClientType_MIN;
  static const ClientType ClientType_MAX =
    GameMessage_ClientType_ClientType_MAX;
  static const int ClientType_ARRAYSIZE =
    GameMessage_ClientType_ClientType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ClientType_descriptor() {
    return GameMessage_ClientType_descriptor();
  }
  static inline const ::std::string& ClientType_Name(ClientType value) {
    return GameMessage_ClientType_Name(value);
  }
  static inline bool ClientType_Parse(const ::std::string& name,
      ClientType* value) {
    return GameMessage_ClientType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .GameMessage.GameMessage.MessageHead msg_head = 1;
  inline bool has_msg_head() const;
  inline void clear_msg_head();
  static const int kMsgHeadFieldNumber = 1;
  inline const ::GameMessage::GameMessage_MessageHead& msg_head() const;
  inline ::GameMessage::GameMessage_MessageHead* mutable_msg_head();
  inline ::GameMessage::GameMessage_MessageHead* release_msg_head();
  inline void set_allocated_msg_head(::GameMessage::GameMessage_MessageHead* msg_head);

  // required .GameMessage.GameMessage.MessageBody msg_body = 2;
  inline bool has_msg_body() const;
  inline void clear_msg_body();
  static const int kMsgBodyFieldNumber = 2;
  inline const ::GameMessage::GameMessage_MessageBody& msg_body() const;
  inline ::GameMessage::GameMessage_MessageBody* mutable_msg_body();
  inline ::GameMessage::GameMessage_MessageBody* release_msg_body();
  inline void set_allocated_msg_body(::GameMessage::GameMessage_MessageBody* msg_body);

  // @@protoc_insertion_point(class_scope:GameMessage.GameMessage)
 private:
  inline void set_has_msg_head();
  inline void clear_has_msg_head();
  inline void set_has_msg_body();
  inline void clear_has_msg_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GameMessage::GameMessage_MessageHead* msg_head_;
  ::GameMessage::GameMessage_MessageBody* msg_body_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static GameMessage* default_instance_;
};
// -------------------------------------------------------------------

class Resource : public ::google::protobuf::Message {
 public:
  Resource();
  virtual ~Resource();

  Resource(const Resource& from);

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Resource& default_instance();

  void Swap(Resource* other);

  // implements Message ----------------------------------------------

  Resource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Resource& from);
  void MergeFrom(const Resource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Resource_Type Type;
  static const Type Crops = Resource_Type_Crops;
  static const Type Berries = Resource_Type_Berries;
  static const Type Fish = Resource_Type_Fish;
  static const Type Bears = Resource_Type_Bears;
  static const Type Mammoths = Resource_Type_Mammoths;
  static inline bool Type_IsValid(int value) {
    return Resource_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Resource_Type_Type_MIN;
  static const Type Type_MAX =
    Resource_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Resource_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Resource_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Resource_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Resource_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .GameMessage.Resource.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::GameMessage::Resource_Type type() const;
  inline void set_type(::GameMessage::Resource_Type value);

  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GameMessage.Resource)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static Resource* default_instance_;
};
// -------------------------------------------------------------------

class PlayerResource : public ::google::protobuf::Message {
 public:
  PlayerResource();
  virtual ~PlayerResource();

  PlayerResource(const PlayerResource& from);

  inline PlayerResource& operator=(const PlayerResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerResource& default_instance();

  void Swap(PlayerResource* other);

  // implements Message ----------------------------------------------

  PlayerResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerResource& from);
  void MergeFrom(const PlayerResource& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // repeated .GameMessage.Resource resource_list = 2;
  inline int resource_list_size() const;
  inline void clear_resource_list();
  static const int kResourceListFieldNumber = 2;
  inline const ::GameMessage::Resource& resource_list(int index) const;
  inline ::GameMessage::Resource* mutable_resource_list(int index);
  inline ::GameMessage::Resource* add_resource_list();
  inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
      resource_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
      mutable_resource_list();

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerResource)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource > resource_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerResource* default_instance_;
};
// -------------------------------------------------------------------

class PlayerGamGeneralActionNotify : public ::google::protobuf::Message {
 public:
  PlayerGamGeneralActionNotify();
  virtual ~PlayerGamGeneralActionNotify();

  PlayerGamGeneralActionNotify(const PlayerGamGeneralActionNotify& from);

  inline PlayerGamGeneralActionNotify& operator=(const PlayerGamGeneralActionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGamGeneralActionNotify& default_instance();

  void Swap(PlayerGamGeneralActionNotify* other);

  // implements Message ----------------------------------------------

  PlayerGamGeneralActionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerGamGeneralActionNotify& from);
  void MergeFrom(const PlayerGamGeneralActionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PlayerGamGeneralActionNotify_Type Type;
  static const Type ENTER_PREPARATION_STEP = PlayerGamGeneralActionNotify_Type_ENTER_PREPARATION_STEP;
  static inline bool Type_IsValid(int value) {
    return PlayerGamGeneralActionNotify_Type_IsValid(value);
  }
  static const Type Type_MIN =
    PlayerGamGeneralActionNotify_Type_Type_MIN;
  static const Type Type_MAX =
    PlayerGamGeneralActionNotify_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    PlayerGamGeneralActionNotify_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return PlayerGamGeneralActionNotify_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return PlayerGamGeneralActionNotify_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return PlayerGamGeneralActionNotify_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .GameMessage.PlayerGamGeneralActionNotify.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::GameMessage::PlayerGamGeneralActionNotify_Type type() const;
  inline void set_type(::GameMessage::PlayerGamGeneralActionNotify_Type value);

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerGamGeneralActionNotify)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerGamGeneralActionNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerEnterGameNotify : public ::google::protobuf::Message {
 public:
  PlayerEnterGameNotify();
  virtual ~PlayerEnterGameNotify();

  PlayerEnterGameNotify(const PlayerEnterGameNotify& from);

  inline PlayerEnterGameNotify& operator=(const PlayerEnterGameNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterGameNotify& default_instance();

  void Swap(PlayerEnterGameNotify* other);

  // implements Message ----------------------------------------------

  PlayerEnterGameNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEnterGameNotify& from);
  void MergeFrom(const PlayerEnterGameNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_count = 1;
  inline bool has_player_count() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 1;
  inline ::google::protobuf::uint32 player_count() const;
  inline void set_player_count(::google::protobuf::uint32 value);

  // repeated uint64 player_ids = 2;
  inline int player_ids_size() const;
  inline void clear_player_ids();
  static const int kPlayerIdsFieldNumber = 2;
  inline ::google::protobuf::uint64 player_ids(int index) const;
  inline void set_player_ids(int index, ::google::protobuf::uint64 value);
  inline void add_player_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_ids();

  // repeated uint32 card_ids = 3;
  inline int card_ids_size() const;
  inline void clear_card_ids();
  static const int kCardIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 card_ids(int index) const;
  inline void set_card_ids(int index, ::google::protobuf::uint32 value);
  inline void add_card_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_ids();

  // repeated uint32 food_tokens = 4;
  inline int food_tokens_size() const;
  inline void clear_food_tokens();
  static const int kFoodTokensFieldNumber = 4;
  inline ::google::protobuf::uint32 food_tokens(int index) const;
  inline void set_food_tokens(int index, ::google::protobuf::uint32 value);
  inline void add_food_tokens(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      food_tokens() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_food_tokens();

  // repeated .GameMessage.Resource resource_in_harvest = 5;
  inline int resource_in_harvest_size() const;
  inline void clear_resource_in_harvest();
  static const int kResourceInHarvestFieldNumber = 5;
  inline const ::GameMessage::Resource& resource_in_harvest(int index) const;
  inline ::GameMessage::Resource* mutable_resource_in_harvest(int index);
  inline ::GameMessage::Resource* add_resource_in_harvest();
  inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
      resource_in_harvest() const;
  inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
      mutable_resource_in_harvest();

  // repeated .GameMessage.Resource resource_in_bank = 6;
  inline int resource_in_bank_size() const;
  inline void clear_resource_in_bank();
  static const int kResourceInBankFieldNumber = 6;
  inline const ::GameMessage::Resource& resource_in_bank(int index) const;
  inline ::GameMessage::Resource* mutable_resource_in_bank(int index);
  inline ::GameMessage::Resource* add_resource_in_bank();
  inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
      resource_in_bank() const;
  inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
      mutable_resource_in_bank();

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerEnterGameNotify)
 private:
  inline void set_has_player_count();
  inline void clear_has_player_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > food_tokens_;
  ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource > resource_in_harvest_;
  ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource > resource_in_bank_;
  ::google::protobuf::uint32 player_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerEnterGameNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerChooseGameBoardReq : public ::google::protobuf::Message {
 public:
  PlayerChooseGameBoardReq();
  virtual ~PlayerChooseGameBoardReq();

  PlayerChooseGameBoardReq(const PlayerChooseGameBoardReq& from);

  inline PlayerChooseGameBoardReq& operator=(const PlayerChooseGameBoardReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChooseGameBoardReq& default_instance();

  void Swap(PlayerChooseGameBoardReq* other);

  // implements Message ----------------------------------------------

  PlayerChooseGameBoardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerChooseGameBoardReq& from);
  void MergeFrom(const PlayerChooseGameBoardReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PlayerChooseGameBoardReq_Angle Angle;
  static const Angle R0 = PlayerChooseGameBoardReq_Angle_R0;
  static const Angle R60 = PlayerChooseGameBoardReq_Angle_R60;
  static const Angle R120 = PlayerChooseGameBoardReq_Angle_R120;
  static const Angle R180 = PlayerChooseGameBoardReq_Angle_R180;
  static const Angle R240 = PlayerChooseGameBoardReq_Angle_R240;
  static const Angle R300 = PlayerChooseGameBoardReq_Angle_R300;
  static inline bool Angle_IsValid(int value) {
    return PlayerChooseGameBoardReq_Angle_IsValid(value);
  }
  static const Angle Angle_MIN =
    PlayerChooseGameBoardReq_Angle_Angle_MIN;
  static const Angle Angle_MAX =
    PlayerChooseGameBoardReq_Angle_Angle_MAX;
  static const int Angle_ARRAYSIZE =
    PlayerChooseGameBoardReq_Angle_Angle_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Angle_descriptor() {
    return PlayerChooseGameBoardReq_Angle_descriptor();
  }
  static inline const ::std::string& Angle_Name(Angle value) {
    return PlayerChooseGameBoardReq_Angle_Name(value);
  }
  static inline bool Angle_Parse(const ::std::string& name,
      Angle* value) {
    return PlayerChooseGameBoardReq_Angle_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // required uint32 gameboard_id = 2;
  inline bool has_gameboard_id() const;
  inline void clear_gameboard_id();
  static const int kGameboardIdFieldNumber = 2;
  inline ::google::protobuf::uint32 gameboard_id() const;
  inline void set_gameboard_id(::google::protobuf::uint32 value);

  // required uint32 pos_x = 3;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 3;
  inline ::google::protobuf::uint32 pos_x() const;
  inline void set_pos_x(::google::protobuf::uint32 value);

  // required uint32 pos_y = 4;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 4;
  inline ::google::protobuf::uint32 pos_y() const;
  inline void set_pos_y(::google::protobuf::uint32 value);

  // required .GameMessage.PlayerChooseGameBoardReq.Angle angle = 5;
  inline bool has_angle() const;
  inline void clear_angle();
  static const int kAngleFieldNumber = 5;
  inline ::GameMessage::PlayerChooseGameBoardReq_Angle angle() const;
  inline void set_angle(::GameMessage::PlayerChooseGameBoardReq_Angle value);

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerChooseGameBoardReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_gameboard_id();
  inline void clear_has_gameboard_id();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_angle();
  inline void clear_has_angle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 gameboard_id_;
  ::google::protobuf::uint32 pos_x_;
  ::google::protobuf::uint32 pos_y_;
  int angle_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerChooseGameBoardReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerChooseGameBoardNotify : public ::google::protobuf::Message {
 public:
  PlayerChooseGameBoardNotify();
  virtual ~PlayerChooseGameBoardNotify();

  PlayerChooseGameBoardNotify(const PlayerChooseGameBoardNotify& from);

  inline PlayerChooseGameBoardNotify& operator=(const PlayerChooseGameBoardNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChooseGameBoardNotify& default_instance();

  void Swap(PlayerChooseGameBoardNotify* other);

  // implements Message ----------------------------------------------

  PlayerChooseGameBoardNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerChooseGameBoardNotify& from);
  void MergeFrom(const PlayerChooseGameBoardNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 next_player_id = 1;
  inline bool has_next_player_id() const;
  inline void clear_next_player_id();
  static const int kNextPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 next_player_id() const;
  inline void set_next_player_id(::google::protobuf::uint64 value);

  // optional .GameMessage.PlayerChooseGameBoardReq player_choose = 2;
  inline bool has_player_choose() const;
  inline void clear_player_choose();
  static const int kPlayerChooseFieldNumber = 2;
  inline const ::GameMessage::PlayerChooseGameBoardReq& player_choose() const;
  inline ::GameMessage::PlayerChooseGameBoardReq* mutable_player_choose();
  inline ::GameMessage::PlayerChooseGameBoardReq* release_player_choose();
  inline void set_allocated_player_choose(::GameMessage::PlayerChooseGameBoardReq* player_choose);

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerChooseGameBoardNotify)
 private:
  inline void set_has_next_player_id();
  inline void clear_has_next_player_id();
  inline void set_has_player_choose();
  inline void clear_has_player_choose();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 next_player_id_;
  ::GameMessage::PlayerChooseGameBoardReq* player_choose_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerChooseGameBoardNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerHarvestAreaUpdateNotify : public ::google::protobuf::Message {
 public:
  PlayerHarvestAreaUpdateNotify();
  virtual ~PlayerHarvestAreaUpdateNotify();

  PlayerHarvestAreaUpdateNotify(const PlayerHarvestAreaUpdateNotify& from);

  inline PlayerHarvestAreaUpdateNotify& operator=(const PlayerHarvestAreaUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerHarvestAreaUpdateNotify& default_instance();

  void Swap(PlayerHarvestAreaUpdateNotify* other);

  // implements Message ----------------------------------------------

  PlayerHarvestAreaUpdateNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerHarvestAreaUpdateNotify& from);
  void MergeFrom(const PlayerHarvestAreaUpdateNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMessage.Resource resource_increasement = 1;
  inline int resource_increasement_size() const;
  inline void clear_resource_increasement();
  static const int kResourceIncreasementFieldNumber = 1;
  inline const ::GameMessage::Resource& resource_increasement(int index) const;
  inline ::GameMessage::Resource* mutable_resource_increasement(int index);
  inline ::GameMessage::Resource* add_resource_increasement();
  inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
      resource_increasement() const;
  inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
      mutable_resource_increasement();

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerHarvestAreaUpdateNotify)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource > resource_increasement_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerHarvestAreaUpdateNotify* default_instance_;
};
// -------------------------------------------------------------------

class PlayerAuctionMessageReq : public ::google::protobuf::Message {
 public:
  PlayerAuctionMessageReq();
  virtual ~PlayerAuctionMessageReq();

  PlayerAuctionMessageReq(const PlayerAuctionMessageReq& from);

  inline PlayerAuctionMessageReq& operator=(const PlayerAuctionMessageReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAuctionMessageReq& default_instance();

  void Swap(PlayerAuctionMessageReq* other);

  // implements Message ----------------------------------------------

  PlayerAuctionMessageReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerAuctionMessageReq& from);
  void MergeFrom(const PlayerAuctionMessageReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // required uint32 auction_card_index = 2;
  inline bool has_auction_card_index() const;
  inline void clear_auction_card_index();
  static const int kAuctionCardIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 auction_card_index() const;
  inline void set_auction_card_index(::google::protobuf::uint32 value);

  // optional bool auction_is_giveup = 3;
  inline bool has_auction_is_giveup() const;
  inline void clear_auction_is_giveup();
  static const int kAuctionIsGiveupFieldNumber = 3;
  inline bool auction_is_giveup() const;
  inline void set_auction_is_giveup(bool value);

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerAuctionMessageReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_auction_card_index();
  inline void clear_has_auction_card_index();
  inline void set_has_auction_is_giveup();
  inline void clear_has_auction_is_giveup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 auction_card_index_;
  bool auction_is_giveup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerAuctionMessageReq* default_instance_;
};
// -------------------------------------------------------------------

class PlayerAuctionBroadcast : public ::google::protobuf::Message {
 public:
  PlayerAuctionBroadcast();
  virtual ~PlayerAuctionBroadcast();

  PlayerAuctionBroadcast(const PlayerAuctionBroadcast& from);

  inline PlayerAuctionBroadcast& operator=(const PlayerAuctionBroadcast& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerAuctionBroadcast& default_instance();

  void Swap(PlayerAuctionBroadcast* other);

  // implements Message ----------------------------------------------

  PlayerAuctionBroadcast* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerAuctionBroadcast& from);
  void MergeFrom(const PlayerAuctionBroadcast& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::uint64 player_id() const;
  inline void set_player_id(::google::protobuf::uint64 value);

  // required uint32 auction_card_index = 2;
  inline bool has_auction_card_index() const;
  inline void clear_auction_card_index();
  static const int kAuctionCardIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 auction_card_index() const;
  inline void set_auction_card_index(::google::protobuf::uint32 value);

  // required bool auction_card_deal = 3;
  inline bool has_auction_card_deal() const;
  inline void clear_auction_card_deal();
  static const int kAuctionCardDealFieldNumber = 3;
  inline bool auction_card_deal() const;
  inline void set_auction_card_deal(bool value);

  // required bool auction_card_giveup = 4;
  inline bool has_auction_card_giveup() const;
  inline void clear_auction_card_giveup();
  static const int kAuctionCardGiveupFieldNumber = 4;
  inline bool auction_card_giveup() const;
  inline void set_auction_card_giveup(bool value);

  // @@protoc_insertion_point(class_scope:GameMessage.PlayerAuctionBroadcast)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_auction_card_index();
  inline void clear_has_auction_card_index();
  inline void set_has_auction_card_deal();
  inline void clear_has_auction_card_deal();
  inline void set_has_auction_card_giveup();
  inline void clear_has_auction_card_giveup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 player_id_;
  ::google::protobuf::uint32 auction_card_index_;
  bool auction_card_deal_;
  bool auction_card_giveup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_GameMessage_2eproto();
  friend void protobuf_AssignDesc_GameMessage_2eproto();
  friend void protobuf_ShutdownFile_GameMessage_2eproto();

  void InitAsDefaultInstance();
  static PlayerAuctionBroadcast* default_instance_;
};
// ===================================================================

static const int kPlayerEnterGameNotifyFieldNumber = 90;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerEnterGameNotify >, 11, false >
  player_enter_game_notify;
static const int kPlayerGeneralActionNotifyFieldNumber = 91;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerGamGeneralActionNotify >, 11, false >
  player_general_action_notify;
static const int kPlayerChooseGameboardReqFieldNumber = 92;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerChooseGameBoardReq >, 11, false >
  player_choose_gameboard_req;
static const int kPlayerChooseGameboardNotifyFieldNumber = 93;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerChooseGameBoardNotify >, 11, false >
  player_choose_gameboard_notify;
static const int kPlayerHarvestAreaUpdateNotifyFieldNumber = 94;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerHarvestAreaUpdateNotify >, 11, false >
  player_harvest_area_update_notify;
static const int kPlayerAuctionMessageReqFieldNumber = 101;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerAuctionMessageReq >, 11, false >
  player_auction_message_req;
static const int kPlayerAuctionBroadcastFieldNumber = 102;
extern ::google::protobuf::internal::ExtensionIdentifier< ::GameMessage::GameMessage_MessageBody,
    ::google::protobuf::internal::MessageTypeTraits< ::GameMessage::PlayerAuctionBroadcast >, 11, false >
  player_auction_broadcast;

// ===================================================================

// GameMessage_MessageHead

// required uint64 seq = 1;
inline bool GameMessage_MessageHead::has_seq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMessage_MessageHead::set_has_seq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMessage_MessageHead::clear_has_seq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMessage_MessageHead::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::uint64 GameMessage_MessageHead::seq() const {
  return seq_;
}
inline void GameMessage_MessageHead::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
}

// required .GameMessage.GameMessage.ClientType client_type = 2 [default = PC];
inline bool GameMessage_MessageHead::has_client_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMessage_MessageHead::set_has_client_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMessage_MessageHead::clear_has_client_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMessage_MessageHead::clear_client_type() {
  client_type_ = 1;
  clear_has_client_type();
}
inline ::GameMessage::GameMessage_ClientType GameMessage_MessageHead::client_type() const {
  return static_cast< ::GameMessage::GameMessage_ClientType >(client_type_);
}
inline void GameMessage_MessageHead::set_client_type(::GameMessage::GameMessage_ClientType value) {
  assert(::GameMessage::GameMessage_ClientType_IsValid(value));
  set_has_client_type();
  client_type_ = value;
}

// required uint32 body_size = 3;
inline bool GameMessage_MessageHead::has_body_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameMessage_MessageHead::set_has_body_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameMessage_MessageHead::clear_has_body_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameMessage_MessageHead::clear_body_size() {
  body_size_ = 0u;
  clear_has_body_size();
}
inline ::google::protobuf::uint32 GameMessage_MessageHead::body_size() const {
  return body_size_;
}
inline void GameMessage_MessageHead::set_body_size(::google::protobuf::uint32 value) {
  set_has_body_size();
  body_size_ = value;
}

// required uint32 body_type = 4;
inline bool GameMessage_MessageHead::has_body_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameMessage_MessageHead::set_has_body_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameMessage_MessageHead::clear_has_body_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameMessage_MessageHead::clear_body_type() {
  body_type_ = 0u;
  clear_has_body_type();
}
inline ::google::protobuf::uint32 GameMessage_MessageHead::body_type() const {
  return body_type_;
}
inline void GameMessage_MessageHead::set_body_type(::google::protobuf::uint32 value) {
  set_has_body_type();
  body_type_ = value;
}

// -------------------------------------------------------------------

// GameMessage_MessageBody

// -------------------------------------------------------------------

// GameMessage

// required .GameMessage.GameMessage.MessageHead msg_head = 1;
inline bool GameMessage::has_msg_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameMessage::set_has_msg_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameMessage::clear_has_msg_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameMessage::clear_msg_head() {
  if (msg_head_ != NULL) msg_head_->::GameMessage::GameMessage_MessageHead::Clear();
  clear_has_msg_head();
}
inline const ::GameMessage::GameMessage_MessageHead& GameMessage::msg_head() const {
  return msg_head_ != NULL ? *msg_head_ : *default_instance_->msg_head_;
}
inline ::GameMessage::GameMessage_MessageHead* GameMessage::mutable_msg_head() {
  set_has_msg_head();
  if (msg_head_ == NULL) msg_head_ = new ::GameMessage::GameMessage_MessageHead;
  return msg_head_;
}
inline ::GameMessage::GameMessage_MessageHead* GameMessage::release_msg_head() {
  clear_has_msg_head();
  ::GameMessage::GameMessage_MessageHead* temp = msg_head_;
  msg_head_ = NULL;
  return temp;
}
inline void GameMessage::set_allocated_msg_head(::GameMessage::GameMessage_MessageHead* msg_head) {
  delete msg_head_;
  msg_head_ = msg_head;
  if (msg_head) {
    set_has_msg_head();
  } else {
    clear_has_msg_head();
  }
}

// required .GameMessage.GameMessage.MessageBody msg_body = 2;
inline bool GameMessage::has_msg_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameMessage::set_has_msg_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameMessage::clear_has_msg_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameMessage::clear_msg_body() {
  if (msg_body_ != NULL) msg_body_->::GameMessage::GameMessage_MessageBody::Clear();
  clear_has_msg_body();
}
inline const ::GameMessage::GameMessage_MessageBody& GameMessage::msg_body() const {
  return msg_body_ != NULL ? *msg_body_ : *default_instance_->msg_body_;
}
inline ::GameMessage::GameMessage_MessageBody* GameMessage::mutable_msg_body() {
  set_has_msg_body();
  if (msg_body_ == NULL) msg_body_ = new ::GameMessage::GameMessage_MessageBody;
  return msg_body_;
}
inline ::GameMessage::GameMessage_MessageBody* GameMessage::release_msg_body() {
  clear_has_msg_body();
  ::GameMessage::GameMessage_MessageBody* temp = msg_body_;
  msg_body_ = NULL;
  return temp;
}
inline void GameMessage::set_allocated_msg_body(::GameMessage::GameMessage_MessageBody* msg_body) {
  delete msg_body_;
  msg_body_ = msg_body;
  if (msg_body) {
    set_has_msg_body();
  } else {
    clear_has_msg_body();
  }
}

// -------------------------------------------------------------------

// Resource

// required .GameMessage.Resource.Type type = 1;
inline bool Resource::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Resource::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Resource::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Resource::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GameMessage::Resource_Type Resource::type() const {
  return static_cast< ::GameMessage::Resource_Type >(type_);
}
inline void Resource::set_type(::GameMessage::Resource_Type value) {
  assert(::GameMessage::Resource_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 count = 2;
inline bool Resource::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Resource::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Resource::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Resource::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Resource::count() const {
  return count_;
}
inline void Resource::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// PlayerResource

// required uint64 player_id = 1;
inline bool PlayerResource::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerResource::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerResource::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerResource::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PlayerResource::player_id() const {
  return player_id_;
}
inline void PlayerResource::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// repeated .GameMessage.Resource resource_list = 2;
inline int PlayerResource::resource_list_size() const {
  return resource_list_.size();
}
inline void PlayerResource::clear_resource_list() {
  resource_list_.Clear();
}
inline const ::GameMessage::Resource& PlayerResource::resource_list(int index) const {
  return resource_list_.Get(index);
}
inline ::GameMessage::Resource* PlayerResource::mutable_resource_list(int index) {
  return resource_list_.Mutable(index);
}
inline ::GameMessage::Resource* PlayerResource::add_resource_list() {
  return resource_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
PlayerResource::resource_list() const {
  return resource_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
PlayerResource::mutable_resource_list() {
  return &resource_list_;
}

// -------------------------------------------------------------------

// PlayerGamGeneralActionNotify

// required .GameMessage.PlayerGamGeneralActionNotify.Type type = 1;
inline bool PlayerGamGeneralActionNotify::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerGamGeneralActionNotify::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerGamGeneralActionNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerGamGeneralActionNotify::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GameMessage::PlayerGamGeneralActionNotify_Type PlayerGamGeneralActionNotify::type() const {
  return static_cast< ::GameMessage::PlayerGamGeneralActionNotify_Type >(type_);
}
inline void PlayerGamGeneralActionNotify::set_type(::GameMessage::PlayerGamGeneralActionNotify_Type value) {
  assert(::GameMessage::PlayerGamGeneralActionNotify_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// PlayerEnterGameNotify

// required uint32 player_count = 1;
inline bool PlayerEnterGameNotify::has_player_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEnterGameNotify::set_has_player_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEnterGameNotify::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEnterGameNotify::clear_player_count() {
  player_count_ = 0u;
  clear_has_player_count();
}
inline ::google::protobuf::uint32 PlayerEnterGameNotify::player_count() const {
  return player_count_;
}
inline void PlayerEnterGameNotify::set_player_count(::google::protobuf::uint32 value) {
  set_has_player_count();
  player_count_ = value;
}

// repeated uint64 player_ids = 2;
inline int PlayerEnterGameNotify::player_ids_size() const {
  return player_ids_.size();
}
inline void PlayerEnterGameNotify::clear_player_ids() {
  player_ids_.Clear();
}
inline ::google::protobuf::uint64 PlayerEnterGameNotify::player_ids(int index) const {
  return player_ids_.Get(index);
}
inline void PlayerEnterGameNotify::set_player_ids(int index, ::google::protobuf::uint64 value) {
  player_ids_.Set(index, value);
}
inline void PlayerEnterGameNotify::add_player_ids(::google::protobuf::uint64 value) {
  player_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PlayerEnterGameNotify::player_ids() const {
  return player_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PlayerEnterGameNotify::mutable_player_ids() {
  return &player_ids_;
}

// repeated uint32 card_ids = 3;
inline int PlayerEnterGameNotify::card_ids_size() const {
  return card_ids_.size();
}
inline void PlayerEnterGameNotify::clear_card_ids() {
  card_ids_.Clear();
}
inline ::google::protobuf::uint32 PlayerEnterGameNotify::card_ids(int index) const {
  return card_ids_.Get(index);
}
inline void PlayerEnterGameNotify::set_card_ids(int index, ::google::protobuf::uint32 value) {
  card_ids_.Set(index, value);
}
inline void PlayerEnterGameNotify::add_card_ids(::google::protobuf::uint32 value) {
  card_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerEnterGameNotify::card_ids() const {
  return card_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerEnterGameNotify::mutable_card_ids() {
  return &card_ids_;
}

// repeated uint32 food_tokens = 4;
inline int PlayerEnterGameNotify::food_tokens_size() const {
  return food_tokens_.size();
}
inline void PlayerEnterGameNotify::clear_food_tokens() {
  food_tokens_.Clear();
}
inline ::google::protobuf::uint32 PlayerEnterGameNotify::food_tokens(int index) const {
  return food_tokens_.Get(index);
}
inline void PlayerEnterGameNotify::set_food_tokens(int index, ::google::protobuf::uint32 value) {
  food_tokens_.Set(index, value);
}
inline void PlayerEnterGameNotify::add_food_tokens(::google::protobuf::uint32 value) {
  food_tokens_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerEnterGameNotify::food_tokens() const {
  return food_tokens_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerEnterGameNotify::mutable_food_tokens() {
  return &food_tokens_;
}

// repeated .GameMessage.Resource resource_in_harvest = 5;
inline int PlayerEnterGameNotify::resource_in_harvest_size() const {
  return resource_in_harvest_.size();
}
inline void PlayerEnterGameNotify::clear_resource_in_harvest() {
  resource_in_harvest_.Clear();
}
inline const ::GameMessage::Resource& PlayerEnterGameNotify::resource_in_harvest(int index) const {
  return resource_in_harvest_.Get(index);
}
inline ::GameMessage::Resource* PlayerEnterGameNotify::mutable_resource_in_harvest(int index) {
  return resource_in_harvest_.Mutable(index);
}
inline ::GameMessage::Resource* PlayerEnterGameNotify::add_resource_in_harvest() {
  return resource_in_harvest_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
PlayerEnterGameNotify::resource_in_harvest() const {
  return resource_in_harvest_;
}
inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
PlayerEnterGameNotify::mutable_resource_in_harvest() {
  return &resource_in_harvest_;
}

// repeated .GameMessage.Resource resource_in_bank = 6;
inline int PlayerEnterGameNotify::resource_in_bank_size() const {
  return resource_in_bank_.size();
}
inline void PlayerEnterGameNotify::clear_resource_in_bank() {
  resource_in_bank_.Clear();
}
inline const ::GameMessage::Resource& PlayerEnterGameNotify::resource_in_bank(int index) const {
  return resource_in_bank_.Get(index);
}
inline ::GameMessage::Resource* PlayerEnterGameNotify::mutable_resource_in_bank(int index) {
  return resource_in_bank_.Mutable(index);
}
inline ::GameMessage::Resource* PlayerEnterGameNotify::add_resource_in_bank() {
  return resource_in_bank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
PlayerEnterGameNotify::resource_in_bank() const {
  return resource_in_bank_;
}
inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
PlayerEnterGameNotify::mutable_resource_in_bank() {
  return &resource_in_bank_;
}

// -------------------------------------------------------------------

// PlayerChooseGameBoardReq

// required uint64 player_id = 1;
inline bool PlayerChooseGameBoardReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChooseGameBoardReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerChooseGameBoardReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerChooseGameBoardReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PlayerChooseGameBoardReq::player_id() const {
  return player_id_;
}
inline void PlayerChooseGameBoardReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// required uint32 gameboard_id = 2;
inline bool PlayerChooseGameBoardReq::has_gameboard_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChooseGameBoardReq::set_has_gameboard_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerChooseGameBoardReq::clear_has_gameboard_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerChooseGameBoardReq::clear_gameboard_id() {
  gameboard_id_ = 0u;
  clear_has_gameboard_id();
}
inline ::google::protobuf::uint32 PlayerChooseGameBoardReq::gameboard_id() const {
  return gameboard_id_;
}
inline void PlayerChooseGameBoardReq::set_gameboard_id(::google::protobuf::uint32 value) {
  set_has_gameboard_id();
  gameboard_id_ = value;
}

// required uint32 pos_x = 3;
inline bool PlayerChooseGameBoardReq::has_pos_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerChooseGameBoardReq::set_has_pos_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerChooseGameBoardReq::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerChooseGameBoardReq::clear_pos_x() {
  pos_x_ = 0u;
  clear_has_pos_x();
}
inline ::google::protobuf::uint32 PlayerChooseGameBoardReq::pos_x() const {
  return pos_x_;
}
inline void PlayerChooseGameBoardReq::set_pos_x(::google::protobuf::uint32 value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required uint32 pos_y = 4;
inline bool PlayerChooseGameBoardReq::has_pos_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerChooseGameBoardReq::set_has_pos_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerChooseGameBoardReq::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerChooseGameBoardReq::clear_pos_y() {
  pos_y_ = 0u;
  clear_has_pos_y();
}
inline ::google::protobuf::uint32 PlayerChooseGameBoardReq::pos_y() const {
  return pos_y_;
}
inline void PlayerChooseGameBoardReq::set_pos_y(::google::protobuf::uint32 value) {
  set_has_pos_y();
  pos_y_ = value;
}

// required .GameMessage.PlayerChooseGameBoardReq.Angle angle = 5;
inline bool PlayerChooseGameBoardReq::has_angle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerChooseGameBoardReq::set_has_angle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerChooseGameBoardReq::clear_has_angle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerChooseGameBoardReq::clear_angle() {
  angle_ = 0;
  clear_has_angle();
}
inline ::GameMessage::PlayerChooseGameBoardReq_Angle PlayerChooseGameBoardReq::angle() const {
  return static_cast< ::GameMessage::PlayerChooseGameBoardReq_Angle >(angle_);
}
inline void PlayerChooseGameBoardReq::set_angle(::GameMessage::PlayerChooseGameBoardReq_Angle value) {
  assert(::GameMessage::PlayerChooseGameBoardReq_Angle_IsValid(value));
  set_has_angle();
  angle_ = value;
}

// -------------------------------------------------------------------

// PlayerChooseGameBoardNotify

// optional uint64 next_player_id = 1;
inline bool PlayerChooseGameBoardNotify::has_next_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerChooseGameBoardNotify::set_has_next_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerChooseGameBoardNotify::clear_has_next_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerChooseGameBoardNotify::clear_next_player_id() {
  next_player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_next_player_id();
}
inline ::google::protobuf::uint64 PlayerChooseGameBoardNotify::next_player_id() const {
  return next_player_id_;
}
inline void PlayerChooseGameBoardNotify::set_next_player_id(::google::protobuf::uint64 value) {
  set_has_next_player_id();
  next_player_id_ = value;
}

// optional .GameMessage.PlayerChooseGameBoardReq player_choose = 2;
inline bool PlayerChooseGameBoardNotify::has_player_choose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerChooseGameBoardNotify::set_has_player_choose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerChooseGameBoardNotify::clear_has_player_choose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerChooseGameBoardNotify::clear_player_choose() {
  if (player_choose_ != NULL) player_choose_->::GameMessage::PlayerChooseGameBoardReq::Clear();
  clear_has_player_choose();
}
inline const ::GameMessage::PlayerChooseGameBoardReq& PlayerChooseGameBoardNotify::player_choose() const {
  return player_choose_ != NULL ? *player_choose_ : *default_instance_->player_choose_;
}
inline ::GameMessage::PlayerChooseGameBoardReq* PlayerChooseGameBoardNotify::mutable_player_choose() {
  set_has_player_choose();
  if (player_choose_ == NULL) player_choose_ = new ::GameMessage::PlayerChooseGameBoardReq;
  return player_choose_;
}
inline ::GameMessage::PlayerChooseGameBoardReq* PlayerChooseGameBoardNotify::release_player_choose() {
  clear_has_player_choose();
  ::GameMessage::PlayerChooseGameBoardReq* temp = player_choose_;
  player_choose_ = NULL;
  return temp;
}
inline void PlayerChooseGameBoardNotify::set_allocated_player_choose(::GameMessage::PlayerChooseGameBoardReq* player_choose) {
  delete player_choose_;
  player_choose_ = player_choose;
  if (player_choose) {
    set_has_player_choose();
  } else {
    clear_has_player_choose();
  }
}

// -------------------------------------------------------------------

// PlayerHarvestAreaUpdateNotify

// repeated .GameMessage.Resource resource_increasement = 1;
inline int PlayerHarvestAreaUpdateNotify::resource_increasement_size() const {
  return resource_increasement_.size();
}
inline void PlayerHarvestAreaUpdateNotify::clear_resource_increasement() {
  resource_increasement_.Clear();
}
inline const ::GameMessage::Resource& PlayerHarvestAreaUpdateNotify::resource_increasement(int index) const {
  return resource_increasement_.Get(index);
}
inline ::GameMessage::Resource* PlayerHarvestAreaUpdateNotify::mutable_resource_increasement(int index) {
  return resource_increasement_.Mutable(index);
}
inline ::GameMessage::Resource* PlayerHarvestAreaUpdateNotify::add_resource_increasement() {
  return resource_increasement_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >&
PlayerHarvestAreaUpdateNotify::resource_increasement() const {
  return resource_increasement_;
}
inline ::google::protobuf::RepeatedPtrField< ::GameMessage::Resource >*
PlayerHarvestAreaUpdateNotify::mutable_resource_increasement() {
  return &resource_increasement_;
}

// -------------------------------------------------------------------

// PlayerAuctionMessageReq

// required uint64 player_id = 1;
inline bool PlayerAuctionMessageReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerAuctionMessageReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerAuctionMessageReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerAuctionMessageReq::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PlayerAuctionMessageReq::player_id() const {
  return player_id_;
}
inline void PlayerAuctionMessageReq::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// required uint32 auction_card_index = 2;
inline bool PlayerAuctionMessageReq::has_auction_card_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerAuctionMessageReq::set_has_auction_card_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerAuctionMessageReq::clear_has_auction_card_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerAuctionMessageReq::clear_auction_card_index() {
  auction_card_index_ = 0u;
  clear_has_auction_card_index();
}
inline ::google::protobuf::uint32 PlayerAuctionMessageReq::auction_card_index() const {
  return auction_card_index_;
}
inline void PlayerAuctionMessageReq::set_auction_card_index(::google::protobuf::uint32 value) {
  set_has_auction_card_index();
  auction_card_index_ = value;
}

// optional bool auction_is_giveup = 3;
inline bool PlayerAuctionMessageReq::has_auction_is_giveup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerAuctionMessageReq::set_has_auction_is_giveup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerAuctionMessageReq::clear_has_auction_is_giveup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerAuctionMessageReq::clear_auction_is_giveup() {
  auction_is_giveup_ = false;
  clear_has_auction_is_giveup();
}
inline bool PlayerAuctionMessageReq::auction_is_giveup() const {
  return auction_is_giveup_;
}
inline void PlayerAuctionMessageReq::set_auction_is_giveup(bool value) {
  set_has_auction_is_giveup();
  auction_is_giveup_ = value;
}

// -------------------------------------------------------------------

// PlayerAuctionBroadcast

// required uint64 player_id = 1;
inline bool PlayerAuctionBroadcast::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerAuctionBroadcast::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerAuctionBroadcast::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerAuctionBroadcast::clear_player_id() {
  player_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_id();
}
inline ::google::protobuf::uint64 PlayerAuctionBroadcast::player_id() const {
  return player_id_;
}
inline void PlayerAuctionBroadcast::set_player_id(::google::protobuf::uint64 value) {
  set_has_player_id();
  player_id_ = value;
}

// required uint32 auction_card_index = 2;
inline bool PlayerAuctionBroadcast::has_auction_card_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerAuctionBroadcast::set_has_auction_card_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerAuctionBroadcast::clear_has_auction_card_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerAuctionBroadcast::clear_auction_card_index() {
  auction_card_index_ = 0u;
  clear_has_auction_card_index();
}
inline ::google::protobuf::uint32 PlayerAuctionBroadcast::auction_card_index() const {
  return auction_card_index_;
}
inline void PlayerAuctionBroadcast::set_auction_card_index(::google::protobuf::uint32 value) {
  set_has_auction_card_index();
  auction_card_index_ = value;
}

// required bool auction_card_deal = 3;
inline bool PlayerAuctionBroadcast::has_auction_card_deal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerAuctionBroadcast::set_has_auction_card_deal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerAuctionBroadcast::clear_has_auction_card_deal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerAuctionBroadcast::clear_auction_card_deal() {
  auction_card_deal_ = false;
  clear_has_auction_card_deal();
}
inline bool PlayerAuctionBroadcast::auction_card_deal() const {
  return auction_card_deal_;
}
inline void PlayerAuctionBroadcast::set_auction_card_deal(bool value) {
  set_has_auction_card_deal();
  auction_card_deal_ = value;
}

// required bool auction_card_giveup = 4;
inline bool PlayerAuctionBroadcast::has_auction_card_giveup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerAuctionBroadcast::set_has_auction_card_giveup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerAuctionBroadcast::clear_has_auction_card_giveup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerAuctionBroadcast::clear_auction_card_giveup() {
  auction_card_giveup_ = false;
  clear_has_auction_card_giveup();
}
inline bool PlayerAuctionBroadcast::auction_card_giveup() const {
  return auction_card_giveup_;
}
inline void PlayerAuctionBroadcast::set_auction_card_giveup(bool value) {
  set_has_auction_card_giveup();
  auction_card_giveup_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GameMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::GameMessage_ClientType>() {
  return ::GameMessage::GameMessage_ClientType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::Resource_Type>() {
  return ::GameMessage::Resource_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::PlayerGamGeneralActionNotify_Type>() {
  return ::GameMessage::PlayerGamGeneralActionNotify_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage::PlayerChooseGameBoardReq_Angle>() {
  return ::GameMessage::PlayerChooseGameBoardReq_Angle_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessage_2eproto__INCLUDED
